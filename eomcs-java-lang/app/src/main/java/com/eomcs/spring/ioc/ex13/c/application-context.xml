<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">
    
    <context:component-scan base-package="com.eomcs.spring.ioc.ex13.c"/>
    
    <!-- AOP 필터 객체 생성 -->
    <bean id="myAdvice" class="com.eomcs.spring.ioc.ex13.c.MyAdvice"/> 
    
    <!-- AOP 적용 -->
    <aop:config>
        <!-- 어느 pointcut에 어떤 advice를 끼워 넣을 지 설정한다. -->
        <aop:aspect id="aspect1" ref="myAdvice">
            
            <!-- 필터를 끼워 넣을 위치를 지정한다. -->
            <aop:pointcut id="pointcut1"
                expression="execution(* com.eomcs.spring.ioc.ex13.c.X.*(..))"/>
            
            <!-- 해당 포인트컷 앞뒤로 필터를 꼽는다. -->
            
            <!-- 메서드 호출 전 -->
            <aop:before pointcut-ref="pointcut1" method="doBefore"/>
            
            <!-- 메서드 실행 후 
                 => 정상적으로 실행하든, 예외가 발생하든 상관없이 반드시 실행된다.
                 => 선언된 순서에 따라 실행된다. 
                    즉 after-returning 을 먼저 설정했다면, 
                    doAfterReturning()이 호출된 후 doAfter()가 호출된다.
                    after를 먼저 설정했다면,
                    doAfter()가 호출된 후 doAfterReturning()이 호출된다.
                 => 따라서 어드바이스 실행 순서에 상관없이
                    정상적으로 실행되었든 비정상적으로 실행되었든 간에 
                    메서드가 호출된 후 반드시 실행 해야 할 작업이 있다면
                    after 로 설정하라! 
            -->
            <aop:after pointcut-ref="pointcut1" method="doAfter"/>
            
            <!-- 메서드 값 리턴 후 -->
            <aop:after-returning pointcut-ref="pointcut1" method="doAfterReturning"/>
            
            <!-- 메서드에서 예외를 던졌을 때 -->
            <aop:after-throwing pointcut-ref="pointcut1" method="doAfterThrowing"/>
            
            <!-- <aop:around pointcut-ref="pointcut1" method="doAround"/> -->
        </aop:aspect>
    </aop:config>
</beans>






