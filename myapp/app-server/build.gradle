plugins {
    id 'eclipse-wtp' // 'eclipse' 플러그인이 자동 포함됨
    id 'war' // 웹 애플리케이션 관련 명령을 사용할 수 있다.
}

// CLI 환경에서 'build' 작업을 수행할 때 사용하는 설정
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8' 
    sourceCompatibility = '17'
    targetCompatibility = '17'
}

// 웹 애플리케이션 배포 파일(.war)을 만들 때 사용할 기본 파일 이름을 설정한다.
// 이 이름은 웹 애플리케이션 context root 경로로도 사용된다.
war {
    archiveBaseName = "web"
}

// 'eclipse' 플러그인 설정:
eclipse {

    // => eclipse 프로젝트 이름 설정하기
    project {
        name = "myapp-server"
    }

    // => eclipse IDE 설정하기
    jdt {  
      sourceCompatibility = 17
      targetCompatibility = 17
      javaRuntimeName = "JavaSE-17"
    }
    
    // 자바 웹 개발 도구에서 사용할 값을 설정한다.
    wtp {
        facet {
            //you can add some extra wtp facets or update existing ones; mandatory keys: 'name', 'version':
            facet name: 'jst.java', version: '17'
            facet name: 'jst.web', version: '4.0'
        }
        component {
            //you can configure the context path:
            //contextPath = '/web'

            //you can configure the deployName:
            //deployName = 'web'
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring WebMVC 라이브러리
    // => spring-web, spring-context에 의존한다.
    // => JavaEE8(Servlet 4.0.1) 버전의 서블릿 컨테이너를 실행할 경우 5.x 버전을 사용해야 한다.
    implementation 'org.springframework:spring-webmvc:5.3.25'
    
    // Spring Web 라이브러리
    //implementation 'org.springframework:spring-web:6.0.5'

    // Spring IoC 컨테이너 
    //implementation 'org.springframework:spring-context:6.0.5'

    // Google JSON 라이브러리 
    implementation 'com.google.code.gson:gson:2.10.1'
    
    // MariaDB JDBC 드라이버
    implementation 'org.mariadb.jdbc:mariadb-java-client:3.1.2'
    
    // Mybatis SQL Mapper 라이브러리
    implementation 'org.mybatis:mybatis:3.5.11'
    
    // Mybatis-Spring 연동 라이브러리
    implementation 'org.mybatis:mybatis-spring:3.0.1'
    
    // Spring JDBC 연동 라이브러리
    implementation 'org.springframework:spring-jdbc:5.3.25'
    
    // Servlet API 라이브러리
    // - 이 라이브러리는 개발하는 동안만 사용한다.
    //   즉 컴파일하거나 빌드할 때만 사용한다.
    // - 배포 파일에는 이 라이브러리를 제외시킨다.
    //   왜? 서블릿 컨테이너에 포함되어 있기 때문이다.
    providedCompile 'javax.servlet:javax.servlet-api:4.0.1'
    
    // JSTL 라이브러리
    implementation 'javax.servlet:jstl:1.2'
    
    // Tiles 라이브러리
    implementation 'org.apache.tiles:tiles-jsp:3.0.8'
    
    // Thymeleaf 라이브러리 
    implementation 'org.thymeleaf:thymeleaf-spring5:3.1.1.RELEASE'
    
    // Log4j 2.x 라이브러리
    implementation 'org.apache.logging.log4j:log4j-core:2.20.0'
    
    // multipart/form-data 처리 라이브러리
    // => Servlet 3.0 API에서 제공하는 멀티파트 처리 기능을 사용한다면 이 라이브러리는 필요없다. 
    //implementation 'commons-fileupload:commons-fileupload:1.5'
    
    implementation 'com.google.guava:guava:31.1-jre'
    testImplementation 'junit:junit:4.13.2'
}
